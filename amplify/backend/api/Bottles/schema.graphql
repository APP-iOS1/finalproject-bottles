type ShopNotice {
  id: ID
  title: String
  body: String
  createDate: AWSDateTime
}

type Curation {
  shopCurationTitle: String
  shopCurationBody: String
  shopCurationImage: String
  shopCurationBottleID: [ID]
}

type Bottle @model @auth(rules: [{allow: public}]) {
  id: ID!
  shopID: ID! @index(name: "byShop")
  itemName: String
  itemImage: String
  itemPrice: Int
  itemML: Float
  itemNation: String
  itemProducer: String
  itemLocal: [String]
  itemVarities: [String]
  itemType: String
  itemAdv: Float
  itemDegree: Float
  itemTag: [String]
  itemAroma: [String]
  itemTaste: [String]
  itemFinish: [String]
  itemPairing: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  email: String
  followShopList: [ID]
  followItemList: [ID]
  pickupList: [ID]
  userPhoneNumber: [AWSPhone]
  recentlyBottles: [ID]
  nickname: String
}

type Shop @model @auth(rules: [{allow: public}]) {
  id: ID!
  shopName: String
  shopAddress: String
  longitude: Float
  latitude: Float
  shopPhoneNumber: AWSPhone
  shopIntroduction: String
  registration: Boolean
  Bottles: [Bottle] @hasMany(indexName: "byShop", fields: ["id"])
  followerUserList: [String]
  shopOpenCloseTime: String
  shopImage: [String]
  shopSNS: String
  shopTitleImage: String
  shopCuration: Curation
  shopNotice: [ShopNotice]
}
 